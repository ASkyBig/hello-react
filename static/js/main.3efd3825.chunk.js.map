{"version":3,"sources":["CommentInput.js","CommentList.js","CommentApp.js","index.js"],"names":["CommentInput","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","userName","userContent","event","target","value","setState","console","log","_this$state","props","inputCallback","react_default","a","createElement","onChange","handleUserName","bind","style","color","handleUserContent","backgroundColor","onClick","handleSubmit","Component","CommentList","commentList","length","map","item","idx","key","CommentApp","push","CommentInput_CommentInput","handleInputCallback","CommentList_CommentList","ReactDOM","render","CommentApp_CommentApp","document","getElementById"],"mappings":"uKAEqBA,cACpB,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACbC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACZC,SAAU,KACVC,YAAa,OAJDT,8EAQCU,GACd,IAAMF,EAAWE,EAAMC,OAAOC,MAC9BT,KAAKU,SAAS,CACbL,SAAUA,8CAIME,GACjB,IAAMD,EAAcC,EAAMC,OAAOC,MACjCT,KAAKU,SAAS,CACbJ,YAAaA,2CAKdK,QAAQC,IAAI,gBADE,IAAAC,EAEkBb,KAAKI,MAA9BC,EAFOQ,EAEPR,SAAUC,EAFHO,EAEGP,YACjBN,KAAKc,MAAMC,cAAcV,EAAUC,GACnCN,KAAKU,SAAS,CACbL,SAAU,GACVC,YAAa,sCAKd,OACCU,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,SAAOT,MAAOT,KAAKI,MAAMC,SAAUc,SAAUnB,KAAKoB,eAAeC,KAAKrB,QACtEgB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMI,MAAO,CAACC,MAAO,QAArB,kCACAP,EAAAC,EAAAC,cAAA,SAAOT,MAAOT,KAAKI,MAAME,YAAaa,SAAUnB,KAAKwB,kBAAkBH,KAAKrB,QAC5EgB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQI,MAAO,CAACG,gBAAiB,UAAWF,MAAO,SAAUG,QAAS1B,KAAK2B,aAAaN,KAAKrB,OAA7F,wBA1CsC4B,aCArBC,mLAEnBlB,QAAQC,IAAI,eADJ,IAEDkB,EAAe9B,KAAKc,MAApBgB,YAEP,OADAnB,QAAQC,IAAI,OAAQkB,EAAYC,QAE/Bf,EAAAC,EAAAC,cAAA,aAEIY,EAAYC,QAAUD,EAAYE,IAAI,SAACC,EAAMC,GAC9C,OAAOlB,EAAAC,EAAAC,cAAA,OAAKiB,IAAKD,GAAMD,EAAK5B,SAArB,KAAiC4B,EAAK3B,uBATVsB,aCEpBQ,cACpB,SAAAA,IAAc,IAAAvC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoC,IACbvC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsC,GAAAjC,KAAAH,QACKI,MAAQ,CACZ0B,YAAa,IAHDjC,mFAOMQ,EAAUC,GAE7BN,KAAKI,MAAM0B,YAAYO,KAAK,CAAChC,WAAUC,gBACvCN,KAAKU,SAAS,CACboB,YAAa9B,KAAKI,MAAM0B,cAEzBnB,QAAQC,IAAIP,EAAU,MAAOC,oCAGrB,IACDwB,EAAe9B,KAAKI,MAApB0B,YACP,OACCd,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACoB,EAAD,CAAcvB,cAAef,KAAKuC,oBAAoBlB,KAAKrB,QAC3DgB,EAAAC,EAAAC,cAACsB,EAAD,CAAaV,YAAaA,YAtBUF,aCAxCa,IAASC,OACR1B,EAAAC,EAAAC,cAACyB,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.3efd3825.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\nexport default class CommentInput extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tuserName: '11',\n\t\t\tuserContent: '444'\n\t\t}\n\t}\n\n\thandleUserName(event) {\n\t\tconst userName = event.target.value\n\t\tthis.setState({\n\t\t\tuserName: userName\n\t\t})\n\t}\n\n\thandleUserContent(event) {\n\t\tconst userContent = event.target.value\n\t\tthis.setState({\n\t\t\tuserContent: userContent\n\t\t})\n\t}\n\n\thandleSubmit() {\n\t\tconsole.log('handleSubmit')\n\t\tconst {userName, userContent} = this.state\n\t\tthis.props.inputCallback(userName, userContent)\n\t\tthis.setState({\n\t\t\tuserName: '',\n\t\t\tuserContent: ''\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<span>Áî®Êà∑ÂêçÔºö</span>\n\t\t\t\t<input value={this.state.userName} onChange={this.handleUserName.bind(this)} />\n\t\t\t\t<hr/>\n\t\t\t\t<span style={{color: 'red'}}>ËØÑËÆ∫ÂÜÖÂÆπÔºö</span>\n\t\t\t\t<input value={this.state.userContent} onChange={this.handleUserContent.bind(this)} />\n\t\t\t\t<hr />\n\t\t\t\t<button style={{backgroundColor: '#39a2d2', color: 'white'}} onClick={this.handleSubmit.bind(this)}>ÂèëÂ∏É</button>\n\t\t\t</div>\n\t\t)\n\t}\n}","import React, {Component} from 'react'\n\nexport default class CommentList extends Component {\n\trender() {\n\t\tconsole.log('list render')\n\t\tconst {commentList} = this.props\n\t\tconsole.log('list', commentList.length)\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\t!!commentList.length && commentList.map((item, idx) => {\n\t\t\t\t\t\treturn <div key={idx}>{item.userName}: {item.userContent}</div>\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}","import React, {Component} from 'react'\nimport CommentInput from './CommentInput'\nimport CommentList from './CommentList'\n\nexport default class CommentApp extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tcommentList: []\n\t\t}\n\t}\n\n\thandleInputCallback(userName, userContent) {\n\n\t\tthis.state.commentList.push({userName, userContent})\n\t\tthis.setState({\n\t\t\tcommentList: this.state.commentList\n\t\t})\n\t\tconsole.log(userName, ' + ', userContent)\n\t}\n\n\trender() {\n\t\tconst {commentList} = this.state\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<CommentInput inputCallback={this.handleInputCallback.bind(this)}/>\n\t\t\t\t<CommentList commentList={commentList}/>\n\t\t\t</div>\n\t\t)\n\t}\n}","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport CommentApp from './CommentApp'\n\nReactDOM.render(\n\t<CommentApp />,\n\tdocument.getElementById('root')\n)\n\n// class Lesson extends Component {\n//   clickFunc(item, index) {\n//   \tconsole.log(index, item.title)\n//   }\n//   render() {\n//   \tconst item = this.props.item\n//   \tconst index = this.props.index\n//   \treturn (\n//   \t\t<div onClick={this.clickFunc.bind(this, item, index)}>\n//   \t\t\t<h1>{item.title}</h1>\n//   \t\t\t<p>{item.description}</p>\n//   \t\t</div>\n//   \t)\n  \t\n//   }\n// }\n\n// class LessonsList extends Component {\n\n\n//   render () {\n//   \tconst lessons = [\n// \t  { title: 'Lesson 1: title', description: 'Lesson 1: description' },\n// \t  { title: 'Lesson 2: title', description: 'Lesson 2: description' },\n// \t  { title: 'Lesson 3: title', description: 'Lesson 3: description' },\n// \t  { title: 'Lesson 4: title', description: 'Lesson 4: description' }\n//   \t]\n//   \treturn (\n//   \t\tlessons.map((item, index) => {\n//   \t\t\treturn <Lesson item={item} key={index} index={index} />\n//   \t\t})\n  \t\t\n//   \t)\n//   } \n// }\n// class Computer extends Component {\n//   constructor () {\n//   \tsuper()\n//   \tthis.state = {\n//   \t\tstatus: false\n//   \t}\n//   }\n\n//   switchComputerStatus () {\n//   \tthis.setState({\n//   \t\tstatus: !this.state.status\n//   \t})\n//   }\n\n//   render () {\n//     return (\n//       <div>\n//       \t<Screen showContent=\"1\" status={this.state.status} />\n//         <button onClick={this.switchComputerStatus.bind(this)}>{this.state.status ? 'on' : 'off'}</button>\n//       </div>\n//     )\n//   }\n// }\n\n// class Screen extends Component {\n//   render () {\n//   \tconst {showContent, status} = this.props\n//     return (\n//       <div className='screen'>\n//       \t{\n//       \t\tstatus \n//       \t\t\t? showContent ? showContent : 'Êó†ÂÜÖÂÆπ'\n//       \t\t\t: null\n//       \t}\n//       \t{\n//       \t\tstatus ? \"ÊòæÁ§∫Âô®‰∫Æ‰∫Ü\" : 'ÊòæÁ§∫Âô®ÂÖ≥‰∫Ü'\n//       \t}\n//       </div>\n//     )\n//   }\n// }\n// class LikeButton extends Component {\n// \tstatic defaultProps = {\n// \t    likedText: 'ÂèñÊ∂à',\n// \t    unlikedText: 'ÁÇπËµû'\n// \t  }\n// \tconstructor() {\n// \t\tsuper()\n// \t\tthis.state = {\n// \t\t\tisLiked: false\n// \t\t}\n// \t}\n\n// \thandleClickOnButton() {\n// \t\tthis.setState({\n// \t\t\tisLiked: !this.state.isLiked\n// \t\t})\n// \t\tif(this.props.onClick) {\n// \t\t\tthis.props.onClick()\n// \t\t}\n// \t}\n\n// \trender() {\n\t\n\t\t\n// \t\treturn(\n// \t\t\t<button onClick={this.handleClickOnButton.bind(this)}>\n// \t\t\t\t{this.state.isLiked ? this.props.likedText : this.props.unlikedText}üëç\n// \t\t\t</button>\n// \t\t)\n// \t}\n// }\n\n// class Index extends Component {\n// \tconstructor() {\n// \t\tsuper()\n// \t\tthis.state = {\n// \t\t\tlikedText: 'Â∑≤Ëµû',\n// \t\t\tunlikedText: 'Ëµû'\n// \t\t}\n// \t}\n\n// \thandleClickOnButton() {\n\n// \t\tthis.setState({\n// \t\t\tlikedText: 'ÂèñÊ∂à',\n// \t\t\tunlikedText: 'ÁÇπËµû'\n// \t\t})\n// \t}\n\n// \trender() {\n// \t\treturn(\n// \t\t\t<div>\n// \t\t\t\t<LikeButton likedText={this.state.likedText} unlikedText={this.state.unlikedText} />\n// \t\t\t\t<button onClick={this.handleClickOnButton.bind(this)}>\n// \t\t\t\t\t‰øÆÊîπ\n// \t\t\t\t</button>\n\n// \t\t\t</div>\n\t\t\t\n// \t\t)\n// \t}\n// }\n// class House extends Component {\n// \trender() {\n// \t\treturn (\n// \t\t\t<div className='house'>\n// \t\t\t\t<Room>\n// \t\t\t\t\t<Man />\n// \t\t\t\t\t<Dog />\n// \t\t\t\t\t<Dog />\n// \t\t\t\t</Room>\n// \t\t\t\t<Bathroom />\n// \t\t\t</div>\n// \t\t)\n// \t}\n// }\n\n// class Room extends Component {\n// \trender() {\n// \t\treturn (\n// \t\t\t<div className='room'>\n// \t\t\t\t<Man />\n// \t\t\t\t<Dog />\n// \t\t\t\t<Dog />\n// \t\t\t</div>\n// \t\t)\n// \t}\n// }\n\n// class Man extends Component {\n// \trender() {\n// \t\treturn (\n// \t\t\t<div className='man'>man</div>\n// \t\t)\n// \t}\n// }\n\n// class Bathroom extends Component {\n// \trender() {\n// \t\treturn (\n// \t\t\t<div className='bathroom'>bathroom</div>\n// \t\t)\n// \t}\n// }\n\n// class Dog extends Component {\n// \tconstructor() {\n// \t\tsuper()\n// \t\tthis.state = {\n// \t\t\tisRunning: false,\n// \t\t\tisBarking: false\n// \t\t}\n// \t}\n\n// \tbark() {\n// \t\tthis.setState({\n// \t\t\tisBarking: true\n// \t\t})\n// \t\tsetTimeout(() => {\n// \t\t\tconsole.log(this.state.isBarking)\n// \t\t\tthis.setState({isBarking: false})\n// \t\t}, 50)\n// \t\tconsole.log('bark')\n// \t}\n\n// \trun() {\n// \t\tthis.setState({\n// \t\t\tisRunning: true\n// \t\t})\n// \t\tsetTimeout(() => {\n// \t\t\tconsole.log(this.state.isRunning)\n// \t\t\tthis.setState({isRunning: false})\n// \t\t}, 50)\n// \t\tconsole.log('run')\n// \t}\n\n// \tbarkAndRun() {\n// \t\tthis.bark()\n// \t\tthis.run()\n// \t}\n\n// \trender() {\n// \t\treturn (\n// \t\t\t<div onClick={this.barkAndRun.bind(this)}>dog</div>\n// \t\t)\n// \t}\n// }\n\n\n// ÂáΩÊï∞ÂÜôÊ≥ï\n// function renderContent(content) {\n// \treturn <h1>{content}</h1>\n// }\n// const Header = renderContent('hello world')\n\n// ReactDOM.render(\n// \tHeader,\n// \tdocument.getElementById('root')\n// )"],"sourceRoot":""}